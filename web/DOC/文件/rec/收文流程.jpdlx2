<process name="收文流程" key="ff80808162f1ab0f0162f20394c0024a" title="#{TITLE}" globalformid="4028821a5d156b39015d167b3767028c" globalformname="收文管理表单" useNewDesigner="true" iconType="1" isUflow="1">
  <ideas>
    <idea>
      <opinionName>
批示意见      </opinionName>
      <opinionCode>
pishiyijian      </opinionCode>
      <opinionOrder>
1      </opinionOrder>
      <opinionNode>
task3      </opinionNode>
      <opinionNodeText>
task3(批示)      </opinionNodeText>
      <eSign>
0      </eSign>
      <ideaStyle>
user,time,idea      </ideaStyle>
      <opinionType>
0      </opinionType>
      <showIdeaStyle>
用户，时间，意见      </showIdeaStyle>
    </idea>
    <idea>
      <opinionName>
阅办      </opinionName>
      <opinionCode>
yueban      </opinionCode>
      <opinionOrder>
2      </opinionOrder>
      <opinionNode>
task5      </opinionNode>
      <opinionNodeText>
task5(阅办)      </opinionNodeText>
      <eSign>
0      </eSign>
      <ideaStyle>
user,time,idea      </ideaStyle>
      <opinionType>
0      </opinionType>
      <showIdeaStyle>
用户，时间，意见      </showIdeaStyle>
    </idea>
  </ideas>
  <meta name="processMobileApproval">
no  </meta>
  <variables>
    <variable alias="标题" name="TITLE" required="N" init-expr="" type="string" desc=""/>
    <variable alias="密级" name="SECRET_LEVEL" required="N" init-expr="" type="string" desc=""/>
  </variables>
  <processAuth>
    <users/>
    <depts/>
    <roles/>
    <groups/>
    <positions/>
  </processAuth>
  <magics>
    <magic type="globalIdea" name="意见修改">
      <possess owner=""/>
      <scope select=""/>
      <pre-processing class="">
      </pre-processing>
      <post-processing class="">
      </post-processing>
      <activity activityName="">
      </activity>
    </magic>
    <magic type="globalJump" name="流程跳转">
      <possess owner=""/>
      <scope select=""/>
      <pre-processing class="">
      </pre-processing>
      <post-processing class="">
      </post-processing>
      <activity activityName="">
      </activity>
    </magic>
    <magic type="globalSuspend" name="流程暂停">
      <possess owner=""/>
      <scope select=""/>
      <pre-processing class="">
      </pre-processing>
      <post-processing class="">
      </post-processing>
      <activity activityName="">
      </activity>
    </magic>
    <magic type="globalResume" name="流程恢复">
      <possess owner=""/>
      <scope select=""/>
      <pre-processing class="">
      </pre-processing>
      <post-processing class="">
      </post-processing>
      <activity activityName="">
      </activity>
    </magic>
    <magic type="globalEnd" name="流程结束">
      <possess owner=""/>
      <scope select=""/>
      <pre-processing class="">
      </pre-processing>
      <post-processing class="">
      </post-processing>
      <activity activityName="">
      </activity>
    </magic>
    <magic type="focus" name="关注工作">
      <possess owner=""/>
      <scope select=""/>
      <pre-processing class="">
      </pre-processing>
      <post-processing class="">
      </post-processing>
      <activity activityName="">
      </activity>
    </magic>
  </magics>
  <meta name="isParticipateKPI">
no  </meta>
  <swimlane label="开始" id="2" alias="开始" g="10,10,700,108" name="swimlane1" cellType="swimlane1">
    <mxCell style="swimlane1;fillColor=#dddddd" parent="1" connectable="0" vertex="1">
      <mxGeometry x="10" y="10" width="700" height="108" as="geometry"/>
    </mxCell>
  </swimlane>
  <swimlane label="各部门" id="6" alias="各部门" g="10,118,700,108" name="swimlane2" cellType="swimlane1">
    <mxCell style="swimlane1;fillColor=#dddddd" parent="1" connectable="0" vertex="1">
      <mxGeometry x="10" y="118" width="700" height="108" as="geometry"/>
    </mxCell>
  </swimlane>
  <swimlane label="公司领导" id="9" alias="公司领导" g="10,334,700,108" name="swimlane3" cellType="swimlane1">
    <mxCell style="swimlane1;fillColor=#dddddd" parent="1" connectable="0" vertex="1">
      <mxGeometry x="10" y="334" width="700" height="108" as="geometry"/>
    </mxCell>
  </swimlane>
  <swimlane label="各单位" id="12" alias="各单位" g="10,442,700,108" name="swimlane4" cellType="swimlane1">
    <mxCell style="swimlane1;fillColor=#dddddd" parent="1" connectable="0" vertex="1">
      <mxGeometry x="10" y="442" width="700" height="108" as="geometry"/>
    </mxCell>
  </swimlane>
  <swimlane label="结束" id="18" alias="结束" g="10,550,700,108" name="swimlane6" cellType="swimlane1">
    <mxCell style="swimlane1;fillColor=#dddddd" parent="1" connectable="0" vertex="1">
      <mxGeometry x="10" y="550" width="700" height="108" as="geometry"/>
    </mxCell>
  </swimlane>
  <swimlane label="安保部拟办" id="33" alias="安保部拟办" g="10,226,700,108" name="swimlane7" cellType="swimlane1">
    <mxCell style="swimlane1;fillColor=#dddddd" parent="1" vertex="1" connectable="0">
      <mxGeometry x="10" y="226" width="700" height="108" as="geometry"/>
    </mxCell>
  </swimlane>
  <start id="3" alias="开始" g="81,30,55,50" name="start1">
    <mxCell style="symbol;image=avicit/platform6/bpmreform/bpmdesigner/editors/images/new/start_event_empty.png;" parent="2" vertex="1">
      <mxGeometry x="71" y="20" width="55" height="50" as="geometry"/>
    </mxCell>
    <transition _id="5" alias="提交" g="-5,-22" name="to task1" to="task1">
      <mxCell id="5" value="" parent="1" source="3" target="4" edge="1">
        <mxGeometry relative="1" as="geometry"/>
      </mxCell>
    </transition>
  </start>
  <end id="24" alias="结束" g="620,579,55,50" name="end1">
    <mxCell style="symbol;image=avicit/platform6/bpmreform/bpmdesigner/editors/images/new/end_event_terminate.png;" parent="18" vertex="1">
      <mxGeometry x="610" y="29" width="55" height="50" as="geometry"/>
    </mxCell>
  </end>
  <task label="登记" id="4" alias="登记" g="60,143,105,58" name="task1" candidate-users="a02d8e6e-e913-438b-b5f9-ff0d4cf7fec2" dealtype="3" taskFormId="4028821a5d156b39015d167b3767028c" taskFormName="收文管理表单">
    <mxCell style="symbol;image=avicit/platform6/bpmreform/bpmdesigner/editors/images/new/task_human.png;" parent="6" vertex="1">
      <mxGeometry x="50" y="25" width="105" height="58" as="geometry"/>
    </mxCell>
    <meta name="taskMobileApproval">
no    </meta>
    <meta name="phoneInfo">
no    </meta>
    <meta name="isWorkHandUser">
no    </meta>
    <meta name="isSecret">
yes    </meta>
    <meta name="secretVar">
<![CDATA[#{SECRET_LEVEL}]]>    </meta>
    <meta name="isSendReaderTodo">
no    </meta>
    <meta name="ideaType">
<![CDATA[can]]>    </meta>
    <meta name="ideaCompelManner">
no    </meta>
    <meta name="isNeedIdea">
yes    </meta>
    <meta name="ideaDisplayStyle">
add    </meta>
    <actors id="a02d8e6e-e913-438b-b5f9-ff0d4cf7fec2"/>
    <meta name="isAutoGetUser">
yes    </meta>
    <meta name="userSelectType">
manual    </meta>
    <meta name="isSelectUser">
yes    </meta>
    <meta name="isMustUser">
no    </meta>
    <fieldsAuth>
      <field id="RECEIVE_FILE_NO" name="收文号" isModified="yes" accessibility="yes" required="no" type="bpm_self_class"/>
      <field id="ff52325e-91fd-4e8f-bbb9-fc99ebdd7a5a" name="拟办意见" isModified="yes" accessibility="yes" required="no" type="bpm_self_class"/>
      <field id="cae74c92-6100-4bd7-b4c5-68f3076d5f3b" name="领导批示" isModified="yes" accessibility="yes" required="no" type="bpm_self_class"/>
      <field id="23b58417-e827-4420-ba8b-22636494a175" name="传阅登记" isModified="yes" accessibility="yes" required="no" type="bpm_self_class"/>
      <field id="5f57a3ab-9582-4298-8e95-87eb4d5c8069" name="承办结果" isModified="yes" accessibility="yes" required="no" type="bpm_self_class"/>
      <field id="TITLE" name="标题" isModified="yes" accessibility="yes" required="no" type="text"/>
      <field id="SEND_FILE_NO" name="来文编号" isModified="yes" accessibility="yes" required="no" type="text"/>
      <field id="FROM_FILE_DEPT_NAME" name="来文机关" isModified="yes" accessibility="yes" required="no" type="text"/>
      <field id="RECEIVE_FILE_DATE" name="收文日期" isModified="yes" accessibility="yes" required="no" type="text"/>
      <field id="COMMENTS" name="备注" isModified="yes" accessibility="yes" required="no" type="textarea"/>
      <field id="SECRET_LEVEL" name="密级" isModified="yes" accessibility="yes" required="no" type="pt6:h5select"/>
      <field id="URGENCY" name="缓急程度" isModified="yes" accessibility="yes" required="no" type="pt6:h5select"/>
    </fieldsAuth>
    <attachmentAuth>
      <attachment id="bb5423b0-8ba3-4e57-ae74-dc424376a865" name="正文" isModified="yes" required="yes" type="eform_mutiattach_auth"/>
      <attachment id="75a22e38-513d-4bde-97f1-a1bdcd1a68c7" name="上报文档" isModified="yes" required="no" type="eform_mutiattach_auth"/>
    </attachmentAuth>
    <docRights>
      <docRight type="formSave" name="可编辑"/>
    </docRights>
    <magics>
      <magic type="withdraw" name="拿回">
        <possess owner=""/>
        <scope select=""/>
        <pre-processing class="">
        </pre-processing>
        <post-processing class="">
        </post-processing>
        <activity activityName="">
        </activity>
      </magic>
    </magics>
    <meta name="handHastenTask">
yes    </meta>
    <meta name="autoHastenTask">
no    </meta>
    <meta name="toReadRemind">
yes    </meta>
    <meta name="sysMessageRemind">
no    </meta>
    <meta name="mailRemind">
no    </meta>
    <meta name="smsRemind">
no    </meta>
    <transition _id="8" alias="送拟办" g="-5,-22" name="to task2" to="task2">
      <mxCell id="8" value="" parent="6" source="4" target="7" edge="1">
        <mxGeometry relative="1" as="geometry"/>
      </mxCell>
    </transition>
  </task>
  <task label="部门拟办" id="7" alias="部门拟办" g="208,143,105,58" name="task2" candidate-users="30cf3d97-ec73-4fb1-b050-ef567715699d" dealtype="3" taskFormId="4028821a5d156b39015d167b3767028c" taskFormName="收文管理表单">
    <mxCell style="symbol;image=avicit/platform6/bpmreform/bpmdesigner/editors/images/new/task_human.png;" parent="6" vertex="1">
      <mxGeometry x="198" y="25" width="105" height="58" as="geometry"/>
    </mxCell>
    <meta name="taskMobileApproval">
yes    </meta>
    <meta name="phoneInfo">
no    </meta>
    <meta name="isWorkHandUser">
yes    </meta>
    <meta name="isSecret">
yes    </meta>
    <meta name="secretVar">
<![CDATA[#{SECRET_LEVEL}]]>    </meta>
    <meta name="isSendReaderTodo">
no    </meta>
    <meta name="ideaType">
<![CDATA[must]]>    </meta>
    <meta name="ideaCompelManner">
no    </meta>
    <meta name="isNeedIdea">
yes    </meta>
    <meta name="ideaDisplayStyle">
add    </meta>
    <actors id="30cf3d97-ec73-4fb1-b050-ef567715699d">
      <actor type="relation">
        <id>
allorguser        </id>
        <name>
所有组织        </name>
      </actor>
    </actors>
    <meta name="isAutoGetUser">
no    </meta>
    <meta name="userSelectType">
manual    </meta>
    <meta name="isSelectUser">
yes    </meta>
    <meta name="isMustUser">
no    </meta>
    <magics>
      <magic type="reTreatToDraft" name="退回拟稿人">
        <possess owner=""/>
        <scope select=""/>
        <pre-processing class="">
        </pre-processing>
        <post-processing class="">
        </post-processing>
        <activity activityName="">
        </activity>
      </magic>
      <magic type="reTreatToPrev" name="退回上一步">
        <possess owner=""/>
        <scope select=""/>
        <pre-processing class="">
        </pre-processing>
        <post-processing class="">
        </post-processing>
        <activity activityName="">
        </activity>
      </magic>
      <magic type="withdraw" name="拿回">
        <possess owner=""/>
        <scope select=""/>
        <pre-processing class="">
        </pre-processing>
        <post-processing class="">
        </post-processing>
        <activity activityName="">
        </activity>
      </magic>
      <magic type="supersede" name="流程转办">
        <possess owner=""/>
        <scope select=""/>
        <pre-processing class="">
        </pre-processing>
        <post-processing class="">
        </post-processing>
        <activity activityName="">
        </activity>
      </magic>
    </magics>
    <meta name="handHastenTask">
no    </meta>
    <meta name="autoHastenTask">
no    </meta>
    <transition _id="11" alias="送所领导批示" g="-5,-22" name="to task3" to="task3">
      <mxCell id="11" value="" parent="1" source="7" target="10" edge="1">
        <mxGeometry relative="1" as="geometry"/>
      </mxCell>
    </transition>
    <transition _id="35" alias="送安保部拟办" g="-5,-22" name="to task7" to="task7">
      <mxCell id="35" value="" parent="1" source="7" target="34" edge="1">
        <mxGeometry relative="1" as="geometry"/>
      </mxCell>
    </transition>
    <transition _id="42" alias="提交公文管理员办理" g="350,54,-5,-22" name="to task4" to="task4">
      <mxCell id="42" value="" parent="6" source="7" target="13" edge="1">
        <mxGeometry relative="1" as="geometry">
          <Array as="points">
            <mxPoint x="350" y="54"/>
          </Array>
        </mxGeometry>
      </mxCell>
    </transition>
  </task>
  <task label="所领导批示" id="10" alias="所领导批示" g="208,359,105,58" name="task3" candidate-users="590cd9a3-1498-40b8-8966-524c0bf5a1ed" dealtype="4" taskFormId="4028821a5d156b39015d167b3767028c" taskFormName="收文管理表单">
    <mxCell style="symbol;image=avicit/platform6/bpmreform/bpmdesigner/editors/images/new/task_human.png;" parent="9" vertex="1">
      <mxGeometry x="198" y="25" width="105" height="58" as="geometry"/>
    </mxCell>
    <meta name="taskMobileApproval">
yes    </meta>
    <meta name="phoneInfo">
no    </meta>
    <meta name="isWorkHandUser">
yes    </meta>
    <meta name="isSecret">
yes    </meta>
    <meta name="secretVar">
<![CDATA[#{SECRET_LEVEL}]]>    </meta>
    <meta name="isSendReaderTodo">
no    </meta>
    <meta name="ideaType">
<![CDATA[must]]>    </meta>
    <meta name="ideaCompelManner">
no    </meta>
    <meta name="isNeedIdea">
yes    </meta>
    <meta name="ideaDisplayStyle">
add    </meta>
    <actors id="590cd9a3-1498-40b8-8966-524c0bf5a1ed">
      <actor type="relation">
        <id>
allorguser        </id>
        <name>
所有组织        </name>
      </actor>
    </actors>
    <meta name="isAutoGetUser">
no    </meta>
    <meta name="userSelectType">
manual    </meta>
    <meta name="isSelectUser">
yes    </meta>
    <meta name="isMustUser">
no    </meta>
    <fieldsAuth>
      <field id="DRAFT_USER_ID" name="登记人" isModified="no" accessibility="yes" required="no" type="text"/>
      <field id="DRAFT_DEPT_ID" name="登记部门" isModified="no" accessibility="yes" required="no" type="text"/>
      <field id="TEL" name="电话" isModified="no" accessibility="yes" required="no" type="text"/>
      <field id="DA" name="登记日期2" isModified="no" accessibility="yes" required="no" type="text"/>
      <field id="TITLE" name="标题" isModified="no" accessibility="yes" required="no" type="text"/>
      <field id="COME_FILE_NO" name="来文编号" isModified="no" accessibility="yes" required="no" type="text"/>
      <field id="FROM_FILE_DEPT_NAME" name="来文单位" isModified="no" accessibility="yes" required="no" type="text"/>
      <field id="SEND_FILE_DATE" name="来文日期" isModified="no" accessibility="yes" required="no" type="text"/>
      <field id="PAGE_NUM" name="页数" isModified="no" accessibility="yes" required="no" type="text"/>
      <field id="DEAL_TIME" name="办理时限" isModified="yes" accessibility="yes" required="no" type="text"/>
      <field id="COMMENTS" name="备注" isModified="no" accessibility="yes" required="no" type="textarea"/>
      <field id="SECRET_LEVEL" name="密级" isModified="no" accessibility="yes" required="no" type="pt6:h5select"/>
      <field id="URGENCY" name="缓急程度" isModified="no" accessibility="yes" required="no" type="pt6:h5select"/>
      <field id="SEND_FILE_NO" name="收文编号" isModified="no" accessibility="yes" required="no" type="bpm_self_class"/>
    </fieldsAuth>
    <attachmentAuth/>
    <docRights>
      <docRight type="formSave" name="可编辑"/>
    </docRights>
    <actors id="4a1caed6-822e-434e-bd1a-95d10a8467d9">
      <actor type="position">
        <id>
8a8095095d346cc2015d34836ad70feb        </id>
        <name>
董事长        </name>
      </actor>
      <actor type="position">
        <id>
4028805d588509d2015885add7130ae3        </id>
        <name>
总经理        </name>
      </actor>
      <actor type="position">
        <id>
8a58a50c5907876201590a9c99120374        </id>
        <name>
副总经理        </name>
      </actor>
    </actors>
    <magics>
      <magic type="reTreatToPrev" name="退回上一步">
        <possess owner=""/>
        <scope select=""/>
        <pre-processing class="">
        </pre-processing>
        <post-processing class="">
        </post-processing>
        <activity activityName="">
        </activity>
      </magic>
      <magic type="supersede" name="流程转办">
        <possess owner=""/>
        <scope select="4a1caed6-822e-434e-bd1a-95d10a8467d9"/>
        <pre-processing class="">
        </pre-processing>
        <post-processing class="">
        </post-processing>
        <activity activityName="">
        </activity>
      </magic>
    </magics>
    <meta name="handHastenTask">
no    </meta>
    <meta name="autoHastenTask">
no    </meta>
    <transition _id="38" alias="送部门领导办理" g="-5,-22" name="to task8" to="task8">
      <mxCell id="38" value="" parent="1" source="10" target="37" edge="1">
        <mxGeometry relative="1" as="geometry"/>
      </mxCell>
    </transition>
  </task>
  <task label="公文管理员办理" id="13" alias="公文管理员办理" g="370,143,105,58" name="task4" candidate-users="2fcd3f15-0b66-47ed-88a0-b368b3b707b5" dealtype="3" taskFormId="4028821a5d156b39015d167b3767028c" taskFormName="收文管理表单">
    <mxCell style="symbol;image=avicit/platform6/bpmreform/bpmdesigner/editors/images/new/task_human.png;" parent="6" vertex="1">
      <mxGeometry x="360" y="25" width="105" height="58" as="geometry"/>
    </mxCell>
    <meta name="taskMobileApproval">
yes    </meta>
    <meta name="phoneInfo">
no    </meta>
    <meta name="isWorkHandUser">
yes    </meta>
    <meta name="isSecret">
yes    </meta>
    <meta name="secretVar">
<![CDATA[#{SECRET_LEVEL}]]>    </meta>
    <meta name="isSendReaderTodo">
no    </meta>
    <meta name="ideaType">
<![CDATA[can]]>    </meta>
    <meta name="ideaCompelManner">
no    </meta>
    <meta name="isNeedIdea">
yes    </meta>
    <meta name="ideaDisplayStyle">
add    </meta>
    <actors id="2fcd3f15-0b66-47ed-88a0-b368b3b707b5">
      <actor type="relation">
        <id>
allorguser        </id>
        <name>
所有组织        </name>
      </actor>
    </actors>
    <meta name="isAutoGetUser">
yes    </meta>
    <meta name="userSelectType">
manual    </meta>
    <meta name="isSelectUser">
yes    </meta>
    <meta name="isMustUser">
no    </meta>
    <magics>
      <magic type="withdraw" name="拿回">
        <possess owner=""/>
        <scope select=""/>
        <pre-processing class="">
        </pre-processing>
        <post-processing class="">
        </post-processing>
        <activity activityName="">
        </activity>
      </magic>
      <magic type="supplement" name="补发">
        <possess owner=""/>
        <scope select=""/>
        <pre-processing class="">
        </pre-processing>
        <post-processing class="">
        </post-processing>
        <activity activityName="">
        </activity>
      </magic>
      <magic type="transmit" name="发送阅知">
        <possess owner=""/>
        <scope select=""/>
        <pre-processing class="">
        </pre-processing>
        <post-processing class="">
        </post-processing>
        <activity activityName="">
        </activity>
      </magic>
    </magics>
    <meta name="handHastenTask">
no    </meta>
    <meta name="autoHastenTask">
no    </meta>
    <transition _id="17" alias="送阅办" g="447,277,-5,-22" name="to task5" to="task5">
      <mxCell id="17" value="" parent="1" source="13" target="16" edge="1">
        <mxGeometry relative="1" as="geometry">
          <Array as="points">
            <mxPoint x="447" y="277"/>
          </Array>
        </mxGeometry>
      </mxCell>
    </transition>
  </task>
  <task label="阅办" id="16" alias="阅办" g="543,460,105,58" name="task5" candidate-users="47077fc6-7491-45e0-8373-0c5b9caca644" dealtype="4" taskFormId="4028821a5d156b39015d167b3767028c" taskFormName="收文管理表单">
    <mxCell style="symbol;image=avicit/platform6/bpmreform/bpmdesigner/editors/images/new/task_human.png;" parent="12" vertex="1">
      <mxGeometry x="533" y="18" width="105" height="58" as="geometry"/>
    </mxCell>
    <meta name="taskMobileApproval">
yes    </meta>
    <meta name="phoneInfo">
no    </meta>
    <meta name="isWorkHandUser">
yes    </meta>
    <meta name="isSecret">
yes    </meta>
    <meta name="secretVar">
<![CDATA[#{SECRET_LEVEL}]]>    </meta>
    <meta name="isSendReaderTodo">
no    </meta>
    <meta name="ideaType">
<![CDATA[can]]>    </meta>
    <meta name="ideaCompelManner">
no    </meta>
    <meta name="isNeedIdea">
yes    </meta>
    <meta name="ideaDisplayStyle">
add    </meta>
    <actors id="47077fc6-7491-45e0-8373-0c5b9caca644">
      <actor type="relation">
        <id>
allorguser        </id>
        <name>
所有组织        </name>
      </actor>
    </actors>
    <meta name="isAutoGetUser">
no    </meta>
    <meta name="userSelectType">
manual    </meta>
    <meta name="isSelectUser">
yes    </meta>
    <meta name="isMustUser">
no    </meta>
    <actors id="fdac7b21-a33d-42c6-a6f2-33cb8c20f939">
      <actor type="relation">
        <id>
allorguser        </id>
        <name>
所有组织        </name>
      </actor>
    </actors>
    <magics>
      <magic type="transmit" name="发送阅知">
        <possess owner=""/>
        <scope select=""/>
        <pre-processing class="">
        </pre-processing>
        <post-processing class="">
        </post-processing>
        <activity activityName="">
        </activity>
      </magic>
      <magic type="addUser" name="加签">
        <possess owner=""/>
        <scope select="fdac7b21-a33d-42c6-a6f2-33cb8c20f939"/>
        <pre-processing class="">
        </pre-processing>
        <post-processing class="">
        </post-processing>
        <activity activityName="">
        </activity>
      </magic>
      <magic type="withdrawAssignee" name="减签">
        <possess owner=""/>
        <scope select=""/>
        <pre-processing class="">
        </pre-processing>
        <post-processing class="">
        </post-processing>
        <activity activityName="">
        </activity>
      </magic>
    </magics>
    <meta name="handHastenTask">
yes    </meta>
    <meta name="autoHastenTask">
no    </meta>
    <meta name="toReadRemind">
no    </meta>
    <meta name="sysMessageRemind">
yes    </meta>
    <meta name="mailRemind">
no    </meta>
    <meta name="smsRemind">
no    </meta>
    <transition _id="41" alias="流程结束" g="-5,-22" name="to end1" to="end1">
      <mxCell id="41" value="" parent="1" source="16" target="24" edge="1">
        <mxGeometry relative="1" as="geometry"/>
      </mxCell>
    </transition>
  </task>
  <task label="安保部拟办" id="34" alias="安保部拟办" g="136,251,105,58" name="task7" dealtype="4">
    <mxCell style="symbol;image=avicit/platform6/bpmreform/bpmdesigner/editors/images/new/task_human.png;" parent="33" vertex="1">
      <mxGeometry x="126" y="25" width="105" height="58" as="geometry"/>
    </mxCell>
    <meta name="taskMobileApproval">
no    </meta>
    <meta name="phoneInfo">
no    </meta>
    <meta name="isWorkHandUser">
yes    </meta>
    <meta name="isSecret">
yes    </meta>
    <meta name="secretVar">
<![CDATA[#{SECRET_LEVEL}]]>    </meta>
    <meta name="isSendReaderTodo">
no    </meta>
    <meta name="ideaType">
<![CDATA[can]]>    </meta>
    <meta name="ideaCompelManner">
no    </meta>
    <meta name="isNeedIdea">
yes    </meta>
    <meta name="ideaDisplayStyle">
add    </meta>
    <meta name="isAutoGetUser">
no    </meta>
    <meta name="userSelectType">
manual    </meta>
    <meta name="isSelectUser">
yes    </meta>
    <meta name="isMustUser">
no    </meta>
    <meta name="handHastenTask">
no    </meta>
    <meta name="autoHastenTask">
no    </meta>
    <meta name="kpiTaskReasonableDay">
<![CDATA[0]]>    </meta>
    <meta name="kpiTaskReasonableHour">
<![CDATA[0]]>    </meta>
    <meta name="kpiTaskReasonableMinute">
<![CDATA[0]]>    </meta>
    <meta name="kpiTaskWarningDay">
<![CDATA[0]]>    </meta>
    <meta name="kpiTaskWarningHour">
<![CDATA[0]]>    </meta>
    <meta name="kpiTaskWarningMinute">
<![CDATA[0]]>    </meta>
    <transition _id="36" alias="送所领导批示" g="180,350,-5,-22" name="to task3" to="task3">
      <mxCell id="36" value="" parent="1" source="34" target="10" edge="1">
        <mxGeometry relative="1" as="geometry">
          <Array as="points">
            <mxPoint x="180" y="350"/>
          </Array>
        </mxGeometry>
      </mxCell>
    </transition>
  </task>
  <task label="部门领导办理" id="37" alias="部门领导办理" g="261,467,105,58" name="task8" dealtype="4">
    <mxCell style="symbol;image=avicit/platform6/bpmreform/bpmdesigner/editors/images/new/task_human.png;" parent="12" vertex="1">
      <mxGeometry x="251" y="25" width="105" height="58" as="geometry"/>
    </mxCell>
    <meta name="taskMobileApproval">
no    </meta>
    <meta name="phoneInfo">
no    </meta>
    <meta name="isWorkHandUser">
yes    </meta>
    <meta name="isSecret">
yes    </meta>
    <meta name="secretVar">
<![CDATA[#{SECRET_LEVEL}]]>    </meta>
    <meta name="isSendReaderTodo">
no    </meta>
    <meta name="ideaType">
<![CDATA[can]]>    </meta>
    <meta name="ideaCompelManner">
no    </meta>
    <meta name="isNeedIdea">
yes    </meta>
    <meta name="ideaDisplayStyle">
add    </meta>
    <meta name="isAutoGetUser">
no    </meta>
    <meta name="userSelectType">
manual    </meta>
    <meta name="isSelectUser">
yes    </meta>
    <meta name="isMustUser">
no    </meta>
    <meta name="handHastenTask">
no    </meta>
    <meta name="autoHastenTask">
no    </meta>
    <meta name="kpiTaskReasonableDay">
<![CDATA[0]]>    </meta>
    <meta name="kpiTaskReasonableHour">
<![CDATA[0]]>    </meta>
    <meta name="kpiTaskReasonableMinute">
<![CDATA[0]]>    </meta>
    <meta name="kpiTaskWarningDay">
<![CDATA[0]]>    </meta>
    <meta name="kpiTaskWarningHour">
<![CDATA[0]]>    </meta>
    <meta name="kpiTaskWarningMinute">
<![CDATA[0]]>    </meta>
    <transition _id="39" alias="提交公文管理员办理" g="410,334,-5,-22" name="to task4" to="task4">
      <mxCell id="39" value="" parent="1" source="37" target="13" edge="1">
        <mxGeometry relative="1" as="geometry">
          <Array as="points">
            <mxPoint x="410" y="334"/>
          </Array>
        </mxGeometry>
      </mxCell>
    </transition>
    <transition _id="40" alias="送办理" g="600,88,-5,-22" name="to task5" to="task5">
      <mxCell id="40" value="" parent="12" source="37" target="16" edge="1">
        <mxGeometry relative="1" as="geometry">
          <Array as="points">
            <mxPoint x="600" y="88"/>
          </Array>
        </mxGeometry>
      </mxCell>
    </transition>
  </task>
</process>
